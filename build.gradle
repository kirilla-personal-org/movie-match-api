plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group 'ru.afanasyev'
version '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    mapstructVersion = '1.5.3.Final'
    testContainersVersion = '1.17.5'
    springDocVersion = '1.7.0'
    set('springCloudVersion', "2023.0.0")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok'

    implementation 'org.flywaydb:flyway-core'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "org.springdoc:springdoc-openapi-ui:${springDocVersion}"
    // Starters
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'ru.afanasyev:bean-visualizer-starter:1.0-SNAPSHOT'

    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation "org.testcontainers:postgresql:${testContainersVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}

compileJava {
    options.compilerArgs += [
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.unmappedTargetPolicy=IGNORE'
    ]
}

tasks.named('jar') {
    archiveFileName.set("movie-match.jar")
}

tasks.named('bootJar') {
    archiveFileName.set("movie-match-plain.jar")
}